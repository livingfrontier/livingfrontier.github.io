:PROPERTIES:
:ID:       63b68951-3324-4803-ad2f-60548fa999ef
:END:
#+title: ARM

* 名称
Arm 的名称非常混乱，这里理清一下：

#+DOWNLOADED: screenshot @ 2024-04-16 21:33:07
[[file:img/2024-04-16_21-33-07_screenshot.png]]

像 =ARMv7, ARMv8= 这种是架构名，是硬件的具体技术规范，是最为宏大的概念。比如说 [[id:47b2dbfe-695d-4af4-91e3-d9cd7220f379][Intel]] 家的 =I3, I5, I7= 或者奔腾也是架构名。

而 =Armv8= 为了兼容性的考量，存在 32 和 64 位两种子架构，这两种子架构分别被成为 =Aarch32= 和 =Aarch64= 。它们同时还是 Armv8 处理器的两种状态，因为处理器可以在 64 位指令集和 32 位指令集之间切换，所以需要两个状态的名字来表示当时使用的是 64 还是 32 位指令。不可能在单个应用程序中使用来自两个执行状态的代码（但是多个程序就可以了）。

而 =A32, A64= 这些名字是 ISA 的名字，他们分别在 Aarch32 和 Aarch64 上运行，他们和 Intel 的 [[id:e016355e-c94d-4611-92ba-d99bba8eba53][X86]] 指令集概念是类似的。为了满足不同的需求，Arm 的处理器上往往可以运行多种指令集，比如说 [[id:659b0f58-6149-44cc-8c97-824e3d601756][Thumb]] 和 [[id:c982fd51-63ec-4363-a01d-80c95110a621][Neon]] 都是特殊的指令集。此外，之前运行的 32 位指令集其实就叫作 ARM ，但是在 64 位指令集出现后，又将原本的 32 位 ARM 指令集称为 A32 。属于是“老子随儿子姓”了。

需要强调的是，和 Thumb 是 16 位和 32 位的混合指令集不同，A64 和 A32 并不是一套指令集的两个部分，A64 并不能兼容 A32 指令集。

#+DOWNLOADED: screenshot @ 2024-04-21 20:09:06
[[file:img/2024-04-21_20-09-06_screenshot.png]]

在一些软件开发中，会出现 =arm64= 的字样，这个并不是 ARM 的官方名称，它只是描述了一种 Arm 公司的 64 位的 ISA ，比如说 Armv9 的指令集，也可以算入 =arm64= 的范畴。

* 汇总
- [[id:4851f521-9f21-4096-ade4-8e100d0c76ea][Arm CPSR]]
- [[id:88f99a3a-c8fd-49c8-898f-d6bc4b4e235f][Arm SCTLR]]
- [[id:3c8bb797-7d14-400f-8949-e38f43275212][Arm MMU]]
- [[id:bf0cfe73-a333-49f0-a0e8-f50f17358312][Arm CTR]]
- [[id:da9c8247-86d6-415e-9466-2676df02725e][Arm Cache]]
- [[id:0c247ea5-c714-408d-b54f-a6b01c3ac473][ARM PMU]]

